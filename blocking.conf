EXTERN: GVAL uint64_t size_t

INCLUDEPATHS:
.
ENDINCLUDEPATHS

SPECIFIERS: SPECIFIER(loc=CELL|EDGE) SPECIFIER(dim=2D)

DECLARATIONS:
 SUBSTITUTE CELL WITH NOTHING
 SUBSTITUTE EDGE WITH NOTHING
 SUBSTITUTE 2D WITH *restrict *restrict
ENDDECLARATIONS

ALLOCATIONS:
GLOBALVARS:
 int local_Y_Cregion;
 int local_Y_Eregion;
ENDGLOBALVARS
 CASE loc=CELL:
 {
            int num_Y_rows = 2 + local_Y_Cregion;
            int num_X_rows = 2 + GRIDX;
            $var_name = malloc(num_Y_rows*num_X_rows*sizeof($data_type)+num_Y_rows*sizeof(char*));
            char* pos = (char*)$var_name + num_Y_rows*sizeof(char*);
            for(int j=0;j<num_Y_rows;j++){
                $var_name[j] = ($data_type*)pos;
                pos+=num_X_rows*sizeof($data_type);
                    for(int i=0;i<num_X_rows;i++){
                        $var_name[j][i] = ($data_type)0;
                    }
            }
            for(int j=0;j<num_Y_rows-1;j++){
                $var_name[j] += 1;
            }
            $var_name += 1;
 }
 ENDCASE
 CASE loc=EDGE:
 {
            int num_Y_rows = 2 + local_Y_Eregion;
            int num_X_rows = 2 + GRIDX + 1;
            $var_name = malloc(num_Y_rows*num_X_rows*sizeof($data_type)+num_Y_rows*sizeof(char*));
            char* pos = (char*)$var_name + num_Y_rows*sizeof(char*);
            for(int j=0;j<num_Y_rows;j++){
                $var_name[j] = ($data_type*)pos;
                pos+=num_X_rows*sizeof($data_type);
                    for(int i=0;i<num_X_rows;i++){
                        $var_name[j][i] = ($data_type)0;
                    }
            }
            for(int j=0;j<num_Y_rows-1;j++){
                $var_name[j] += 1;
            }
            $var_name += 1;
 }
 ENDCASE
ENDALLOCATIONS

DEALLOCATIONS:
 CASE loc=CELL:
  {
   free((void*)&$var_name[-1]);
  }
 ENDCASE
 CASE loc=EDGE:
  {
   free((void*)&$var_name[-1]);
  }
 ENDCASE
ENDDEALLOCATIONS

GLOBALDOMAIN:
 COMPONENT(CELL2D):
  RANGE OF YD= 0 TO GRIDY
  RANGE OF XD= 0 TO GRIDX
 ENDCOMPONENT
 COMPONENT(EDGE2D):
  RANGE OF YD= 0 TO GRIDY+1
  RANGE OF XD= 0 TO GRIDX+1
 ENDCOMPONENT
 DEFAULT=CELL2D[CELL2D:cell,ce,c][EDGE2D:edge,ed,e]
ENDGLOBALDOMAIN

INDEXOPERATORS:
east_cell(): XD=$XD
west_cell(): XD=$XD-1
north_cell(): YD=$YD
south_cell(): YD=$YD-1
edge_east_neighbor(): XD=$XD+1
edge_west_neighbor(): XD=$XD-1
edge_north_neighbor(): YD=$YD+1
edge_south_neighbor(): YD=$YD-1
edge_ne_neighbor(): YD=$YD+1
edge_nw_neighbor(): YD=$YD+1
edge_nw_neighbor(): XD=$XD-1
edge_se_neighbor(): XD=$XD
edge_sw_neighbor(): XD=$XD-1
edge_vnorth_neighbor(): YD=$YD+1
edge_vsouth_neighbor(): YD=$YD-1
edge_en_neighbor(): XD=$XD+1
edge_es_neighbor(): XD=$XD+1
edge_es_neighbor(): YD=$YD-1
edge_wn_neighbor(): XD=$XD
edge_ws_neighbor(): YD=$YD-1
edge_heast_neighbor(): XD=$XD+1
edge_hwest_neighbor(): XD=$XD-1
east_edge(): XD=$XD+1
west_edge(): XD=$XD
north_edge(): YD=$YD+1
south_edge(): YD=$YD
ENDINDEXOPERATORS

ANNOTATIONS:
 LEVEL 0:pragma omp parallel for
ENDANNOTATIONS

CBLOCKING:
XD=20000
ENDCBLOCKING

DOMAINDECOMPOSITION:
 nodes=1
 processID=0
 INCLUDE:
 INITIALIZATION:
 {
 }
 ENDINITIALIZATION
 FINALIZATION:
 {
 }
 ENDFINALIZATION
ENDDOMAINDECOMPOSITION

LOCALDOMAIN:
 COMPONENT(CELL2D):
  RANGE OF YD= 0 TO local_Y_Cregion
 ENDCOMPONENT
 COMPONENT(EDGE2D):
  RANGE OF YD= 0 TO local_Y_Eregion
 ENDCOMPONENT
ENDLOCALDOMAIN

COMMUNICATION:
COMMINITIALIZATION:
{
 local_Y_Cregion = GRIDY;
 local_Y_Eregion = GRIDY+1;
}
ENDCOMMINITIALIZATION
ENDCOMMUNICATION
